---
# tasks file for airship-deploy-tempest
- name: Load standard variables
  include_vars: "{{ playbook_dir }}/../vars/common-vars.yml"
  tags:
    - always

- name: Set site path
  set_fact:
    site_path: "{{ upstream_repos_clone_folder }}/airship/treasuremap/site/{{ socok8s_site_name }}"
  tags:
    - always

- name: Ensure site directory for {{ socok8s_site_name }} exists
  become: yes
  file:
    path: "{{ site_path }}"
    state: directory

- name: Ensure tempest chart directory exists
  become: yes
  file:
    path: "{{ site_path }}/software/charts/osh/openstack-tempest"
    state: directory

- name: Get external network ID
  shell: "openstack network show {{ openstack_external_network_name }} -f value -c id"
  environment:
    OS_CLOUD: openstack
  register: tempest_test_public_network_id
  tags:
    - skip_ansible_lint

- name: Get external subnet CIDR
  shell: "openstack subnet show {{ openstack_external_subnet_name }} -f value -c cidr"
  environment:
    OS_CLOUD: openstack
  register: openstack_external_subnet_cidr
  tags:
    - skip_ansible_lint

- name: Check if subnet pool stack exists
  shell: "openstack stack show heat-subnet-pool-deployment"
  environment:
    OS_CLOUD: openstack
  register: subnet_pool_result
  failed_when:
    - subnet_pool_result.rc != 0
    - "'not found' not in subnet_pool_result.stderr"
  changed_when: false
  tags:
    - skip_ansible_lint

- name: Setup subnet pool
  shell: "{{ role_path }}/files/tempest_setup_subnet.sh"
  args:
    chdir: "{{ upstream_repos_clone_folder }}/openstack/openstack-helm"
  when: subnet_pool_result.stderr is search('not found')
  tags:
    - skip_ansible_lint

- name: Get m1.tiny flavor ID
  shell: "openstack flavor show m1.tiny -f value -c id"
  environment:
    OS_CLOUD: openstack
  register: tempest_test_flavor_id
  tags:
    - skip_ansible_lint

- name: Get Cirros image ID
  shell: "{{ role_path }}/files/tempest_get_image_id.sh"
  register: tempest_test_image_id
  tags:
    - skip_ansible_lint

- name: Render tempest.yaml and move to openstack-tempest directory
  become: yes
  template:
    src: "{{ playbook_dir }}/../site/soc/software/charts/osh/openstack-tempest/tempest.yaml"
    dest: "{{ site_path }}/software/charts/osh/openstack-tempest/tempest.yaml"

- name: Move chart-group.yaml to openstack-tempest directory
  become: yes
  copy:
    src: "{{ playbook_dir }}/../site/soc/software/charts/osh/openstack-tempest/chart-group.yaml"
    dest: "{{ site_path }}/software/charts/osh/openstack-tempest/chart-group.yaml"

- name: Reprocess site manifest template for tempest deployment
  become: yes
  template:
    src: "{{ playbook_dir }}/../site/soc/software/manifests/full-site.yaml"
    dest: "{{ site_path }}/software/manifests/full-site.yaml"
  when: deploy_tempest|default(false)|bool

- name: Delete previous tempest test pods if present
  shell: "helm delete --purge airship-tempest"
  register: helm_result
  failed_when:
    - helm_result.rc != 0
    - "'not found' not in helm_result.stderr"
  changed_when: helm_result.stdout is search('deleted')
  tags:
    - skip_ansible_lint

- name: Update site software via Shipyard
  include_role:
    name: airship-deploy-osh
    apply:
      tags:
        - update_airship_osh_site
