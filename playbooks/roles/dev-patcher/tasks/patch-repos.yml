---
- name: Get patch {{ patchnumber }} details
  uri:
    url: "{{ dev_patcher_baseurl }}/?q=is:open+{{ patchnumber }}&o=CURRENT_REVISION"
    return_content: yes
    body_format: json
  register: thispatch

# Gerrit starts its http response with ")]}'". Strip that to have a valid json.
- name: Parse patch details
  set_fact:
    jsoncontent: "{{ thispatch.content.replace(pattern_to_replace,'') | from_json }}"
  vars:
    pattern_to_replace: ")]}'"

- name: Apply {{ patchnumber }} - {{ jsoncontent[0]['subject'] }}
  shell: |
    set -o errexit
    git fetch {{ jsoncontent[0]['revisions'][current_revision]['fetch']['anonymous http']['url'] }} {{ jsoncontent[0]['revisions'][current_revision]['fetch']['anonymous http']['ref'] }}
    git cherry-pick FETCH_HEAD
  args:
    chdir: "{{ upstream_repos_clone_folder }}/{{ project }}"
  vars:
    current_revision: "{{ jsoncontent[0]['current_revision'] }}"
    project: "{{ jsoncontent[0]['project'].replace('openstack/','') }}"
  when:
    # Do not apply patches if they are already merged
    - "jsoncontent | length > 0"
    - "jsoncontent[0]['mergeable'] | bool"
